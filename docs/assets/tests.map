{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","lift-tracker-531/tests/helpers/ember-simple-auth.js","lift-tracker-531/tests/lint/app.lint-test.js","lift-tracker-531/tests/lint/templates.template.lint-test.js","lift-tracker-531/tests/lint/tests.lint-test.js","lift-tracker-531/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"lift-tracker-531/tests/helpers/ember-simple-auth\", [\"exports\", \"ember-simple-auth/authenticators/test\"], function (_exports, _test) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.authenticateSession = authenticateSession;\n  _exports.currentSession = currentSession;\n  _exports.invalidateSession = invalidateSession;\n  const TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    const authenticator = container.lookup(TEST_CONTAINER_KEY);\n\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    const {\n      __container__: container\n    } = app;\n    const session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return app.testHelpers.wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    const session = app.__container__.lookup('service:session');\n\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n\n    return app.testHelpers.wait();\n  }\n});","define(\"lift-tracker-531/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('authenticators/firebase.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/firebase.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/confirm-delete.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/confirm-delete.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/finish-cycle.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/finish-cycle.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/settings-account-control.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/settings-account-control.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/settings-bar-loading-control.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/settings-bar-loading-control.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/settings-lifts-control.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/settings-lifts-control.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/title-bar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/title-bar.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/workout-logger.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/workout-logger.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/workout-set.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/workout-set.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/login.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/settings.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/settings.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('helpers/capitalize.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/capitalize.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('helpers/eq.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/eq.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('helpers/join.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/join.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('helpers/not.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/not.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/bar-loading.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/bar-loading.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/completed-workout.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/completed-workout.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/lift.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/lift.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/lift.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/lift.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/settings.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/settings.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/week.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/week.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('services/wendler.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/wendler.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('session-stores/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'session-stores/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('utils/one-rep-estimate.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/one-rep-estimate.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('utils/plate-math.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/plate-math.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('utils/workout-specs.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/workout-specs.js should pass ESLint\\n\\n');\n  });\n});","define(\"lift-tracker-531/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('lift-tracker-531/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/confirm-delete.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/confirm-delete.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/finish-cycle.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/finish-cycle.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/settings-account-control.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/settings-account-control.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/settings-bar-loading-control.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/settings-bar-loading-control.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/settings-lifts-control.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/settings-lifts-control.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/title-bar.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/title-bar.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/workout-logger.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/workout-logger.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/components/workout-set.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/components/workout-set.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/lift.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/lift.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/login.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/login.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/settings.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/settings.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('lift-tracker-531/templates/week.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'lift-tracker-531/templates/week.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"lift-tracker-531/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","define(\"lift-tracker-531/tests/test-helper\", [\"lift-tracker-531/app\", \"lift-tracker-531/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define('lift-tracker-531/config/environment', [], function() {\n  var prefix = 'lift-tracker-531';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('lift-tracker-531/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjBA;AACA;","file":"tests.js"}